function a(){return{updatedAt:new Date().toISOString(),outdoor:{temp:12.2,trend:.8,feelsLike:12.2,dewPoint:5.6,humidity:64,vpd:.511},indoor:{temp:14.5,trend:-1.4,humidity:57},solar:{solar:306.2,uvi:2,sunrise:"06:25",sunset:"17:57",moon:"Waning Gibbous"},rain:{rate:0,daily:0,event:31.8,hourly:0,weekly:33.6,monthly:33.6,yearly:33.6},wind:{dir:221,speed:8.6,gust:18.4,timeSpeed:"09:46",timeGust:"00:07"},pressure:{rel:993.7,abs:993.7,deltaRel:-.2,deltaAbs:-.2},battery:{status:"NORMAL",note:"Sensor Array"},series:Array.from({length:48}).map((t,e)=>({t:e,temp:6+e*.12+Math.sin(e/3)*.5,feels:5.5+e*.1+Math.sin(e/4)*.4,dew:3+Math.sin(e/5)*.3}))}}async function o(r=fetch){try{const t=await r("/weather/current");if(!t.ok)throw new Error(`status ${t.status}`);const e=await t.json(),n=t.headers.get("x-weather-connected")==="true",s=t.headers.get("x-weather-source")||"mock";return{weather:e,connected:n,source:s}}catch{return{weather:a(),connected:!1,source:"mock"}}}export{o as f};
