function y(t,e){const n=.6108*Math.exp(17.27*t/(t+237.3)),o=e/100*n;return Math.max(0,n-o)}function v(t){const e=i(),n=new Date(t.timestamp_utc??new Date().toISOString()).toISOString(),o=t.temp_c??void 0,r=t.humidity_pct??void 0,d=o!=null&&r!=null?y(o,r):e.outdoor.vpd,u=o!=null&&r!=null?(()=>{const s=17.27*o/(237.7+o)+Math.log(r/100);return 237.7*s/(17.27-s)})():e.outdoor.dewPoint,c=t.wind_avg_ms??void 0,l=t.wind_gust_ms??void 0,m=t.wind_dir_deg??void 0,a=t.pressure_hpa??void 0,h=t.solar_wm2??void 0,p=t.rain_1h_mm??void 0,w=t.rain_24h_mm??void 0;return{updatedAt:n,outdoor:{temp:o??e.outdoor.temp,trend:0,feelsLike:o??e.outdoor.feelsLike,dewPoint:u,humidity:r??e.outdoor.humidity,vpd:d},indoor:{temp:e.indoor.temp,trend:0,humidity:e.indoor.humidity},solar:{solar:h??e.solar.solar,uvi:e.solar.uvi,sunrise:e.solar.sunrise,sunset:e.solar.sunset,moon:e.solar.moon},rain:{rate:0,daily:w??e.rain.daily,event:e.rain.event,hourly:p??e.rain.hourly,weekly:e.rain.weekly,monthly:e.rain.monthly,yearly:e.rain.yearly},wind:{dir:m??e.wind.dir,speed:c??e.wind.speed,gust:l??e.wind.gust,timeSpeed:e.wind.timeSpeed,timeGust:e.wind.timeGust},pressure:{rel:a??e.pressure.rel,abs:a??e.pressure.abs,deltaRel:0,deltaAbs:0},battery:{status:e.battery.status,note:e.battery.note},series:e.series}}async function f(t){try{const e=await fetch(`${t.replace(/\/$/,"")}/weather/current`);if(!e.ok)throw new Error(`backend /weather/current failed: ${e.status}`);const n=await e.json();return{data:v(n),connected:!0,source:"ecowitt"}}catch{return console.warn("[backend] Fetch failed; serving mock data"),{data:i(),connected:!1,source:"mock"}}}function i(){return{updatedAt:new Date().toISOString(),outdoor:{temp:12.2,trend:.8,feelsLike:12.2,dewPoint:5.6,humidity:64,vpd:.511},indoor:{temp:14.5,trend:-1.4,humidity:57},solar:{solar:306.2,uvi:2,sunrise:"06:25",sunset:"17:57",moon:"Waning Gibbous"},rain:{rate:0,daily:0,event:31.8,hourly:0,weekly:33.6,monthly:33.6,yearly:33.6},wind:{dir:221,speed:8.6,gust:18.4,timeSpeed:"09:46",timeGust:"00:07"},pressure:{rel:993.7,abs:993.7,deltaRel:-.2,deltaAbs:-.2},battery:{status:"NORMAL",note:"Sensor Array"},series:Array.from({length:48}).map((e,n)=>({t:n,temp:6+n*.12+Math.sin(n/3)*.5,feels:5.5+n*.1+Math.sin(n/4)*.4,dew:3+Math.sin(n/5)*.3}))}}async function g(){const{data:t,connected:e,source:n}=await f("/api");return{weather:t,connected:e,source:n}}export{g as f};
